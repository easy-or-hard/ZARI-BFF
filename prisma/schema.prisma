generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Constellation {
  IAU                String   @id @db.VarChar(3)
  name               String   @unique @db.VarChar
  constellationCount Int
  startMonth         Int
  startDay           Int
  endMonth           Int
  endDay             Int
  zaris              Zari[]
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
}

model User {
  id         Int      @id @default(autoincrement())
  provider   String
  providerId String
  email      String?
  byeol      Byeol?   @relation(fields: [byeolId], references: [id])
  byeolId    Int?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([provider, providerId])
}

model Byeol {
  id         Int        @id @default(autoincrement())
  name       String     @unique @db.VarChar(16) // 이 컬럼을 수정 할 때 반드시 Byeol과 Banzzack의 name 둘 다 수정 할 것
  users      User[]
  zaris      Zari[]
  banzzacks  Banzzack[]
  isActivate Boolean    @default(true)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Zari {
  id               Int           @id @default(autoincrement())
  constellation    Constellation @relation(fields: [constellationIAU], references: [IAU])
  constellationIAU String        @db.VarChar(3)
  byeol            Byeol         @relation(fields: [byeolId], references: [id])
  byeolId          Int
  banzzacks        Banzzack[]
  isPublic         Boolean       @default(true)
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt

  @@unique([byeolId, constellationIAU])
}

model Banzzack {
  id         Int      @id @default(autoincrement())
  content    String   @db.Text
  byeol      Byeol    @relation(fields: [byeolId], references: [id])
  byeolId    Int
  byeolName  String   @db.VarChar(16) // 별의 이름이 수정되어도 작성 당시의 이름을 보관. 이 컬럼을 수정 할 때 반드시 Byeol과 Banzzack의 name 둘 다 수정 할 것
  zari       Zari     @relation(fields: [zariId], references: [id], onDelete: Cascade)
  zariId     Int
  starNumber Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([zariId, starNumber])
}
